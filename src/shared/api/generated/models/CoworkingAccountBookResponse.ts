/* tslint:disable */
/* eslint-disable */
/**
 * CRM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoworkingSpaceBookResponse } from './CoworkingSpaceBookResponse';
import {
    CoworkingSpaceBookResponseFromJSON,
    CoworkingSpaceBookResponseFromJSONTyped,
    CoworkingSpaceBookResponseToJSON,
    CoworkingSpaceBookResponseToJSONTyped,
} from './CoworkingSpaceBookResponse';
import type { AccountProfileResponse } from './AccountProfileResponse';
import {
    AccountProfileResponseFromJSON,
    AccountProfileResponseFromJSONTyped,
    AccountProfileResponseToJSON,
    AccountProfileResponseToJSONTyped,
} from './AccountProfileResponse';

/**
 * 
 * @export
 * @interface CoworkingAccountBookResponse
 */
export interface CoworkingAccountBookResponse {
    /**
     * 
     * @type {string}
     * @memberof CoworkingAccountBookResponse
     */
    bookId: string;
    /**
     * 
     * @type {CoworkingSpaceBookResponse}
     * @memberof CoworkingAccountBookResponse
     */
    coworking: CoworkingSpaceBookResponse;
    /**
     * 
     * @type {AccountProfileResponse}
     * @memberof CoworkingAccountBookResponse
     */
    profile: AccountProfileResponse;
    /**
     * 
     * @type {Date}
     * @memberof CoworkingAccountBookResponse
     */
    startTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof CoworkingAccountBookResponse
     */
    endTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof CoworkingAccountBookResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof CoworkingAccountBookResponse
     */
    price: number;
    /**
     * 
     * @type {number}
     * @memberof CoworkingAccountBookResponse
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof CoworkingAccountBookResponse
     */
    longitude: number;
    /**
     * 
     * @type {boolean}
     * @memberof CoworkingAccountBookResponse
     */
    isRoom: boolean;
}

/**
 * Check if a given object implements the CoworkingAccountBookResponse interface.
 */
export function instanceOfCoworkingAccountBookResponse(value: object): value is CoworkingAccountBookResponse {
    if (!('bookId' in value) || value['bookId'] === undefined) return false;
    if (!('coworking' in value) || value['coworking'] === undefined) return false;
    if (!('profile' in value) || value['profile'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('endTime' in value) || value['endTime'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('isRoom' in value) || value['isRoom'] === undefined) return false;
    return true;
}

export function CoworkingAccountBookResponseFromJSON(json: any): CoworkingAccountBookResponse {
    return CoworkingAccountBookResponseFromJSONTyped(json, false);
}

export function CoworkingAccountBookResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoworkingAccountBookResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'bookId': json['book_id'],
        'coworking': CoworkingSpaceBookResponseFromJSON(json['coworking']),
        'profile': AccountProfileResponseFromJSON(json['profile']),
        'startTime': (new Date(json['start_time'])),
        'endTime': (new Date(json['end_time'])),
        'createdAt': (new Date(json['created_at'])),
        'price': json['price'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'isRoom': json['is_room'],
    };
}

export function CoworkingAccountBookResponseToJSON(json: any): CoworkingAccountBookResponse {
    return CoworkingAccountBookResponseToJSONTyped(json, false);
}

export function CoworkingAccountBookResponseToJSONTyped(value?: CoworkingAccountBookResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'book_id': value['bookId'],
        'coworking': CoworkingSpaceBookResponseToJSON(value['coworking']),
        'profile': AccountProfileResponseToJSON(value['profile']),
        'start_time': ((value['startTime']).toISOString()),
        'end_time': ((value['endTime']).toISOString()),
        'created_at': ((value['createdAt']).toISOString()),
        'price': value['price'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'is_room': value['isRoom'],
    };
}

