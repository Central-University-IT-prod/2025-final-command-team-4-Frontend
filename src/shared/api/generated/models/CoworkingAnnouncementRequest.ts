/* tslint:disable */
/* eslint-disable */
/**
 * CRM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoworkingAnnouncementRequest
 */
export interface CoworkingAnnouncementRequest {
    /**
     * 
     * @type {string}
     * @memberof CoworkingAnnouncementRequest
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof CoworkingAnnouncementRequest
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof CoworkingAnnouncementRequest
     */
    roomBookId: string;
}

/**
 * Check if a given object implements the CoworkingAnnouncementRequest interface.
 */
export function instanceOfCoworkingAnnouncementRequest(value: object): value is CoworkingAnnouncementRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('roomBookId' in value) || value['roomBookId'] === undefined) return false;
    return true;
}

export function CoworkingAnnouncementRequestFromJSON(json: any): CoworkingAnnouncementRequest {
    return CoworkingAnnouncementRequestFromJSONTyped(json, false);
}

export function CoworkingAnnouncementRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoworkingAnnouncementRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'content': json['content'],
        'roomBookId': json['room_book_id'],
    };
}

export function CoworkingAnnouncementRequestToJSON(json: any): CoworkingAnnouncementRequest {
    return CoworkingAnnouncementRequestToJSONTyped(json, false);
}

export function CoworkingAnnouncementRequestToJSONTyped(value?: CoworkingAnnouncementRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'content': value['content'],
        'room_book_id': value['roomBookId'],
    };
}

