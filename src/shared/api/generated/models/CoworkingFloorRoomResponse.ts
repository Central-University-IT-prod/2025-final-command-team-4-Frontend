/* tslint:disable */
/* eslint-disable */
/**
 * CRM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoworkingAccountBookingResponse } from './CoworkingAccountBookingResponse';
import {
    CoworkingAccountBookingResponseFromJSON,
    CoworkingAccountBookingResponseFromJSONTyped,
    CoworkingAccountBookingResponseToJSON,
    CoworkingAccountBookingResponseToJSONTyped,
} from './CoworkingAccountBookingResponse';

/**
 * 
 * @export
 * @interface CoworkingFloorRoomResponse
 */
export interface CoworkingFloorRoomResponse {
    /**
     * 
     * @type {string}
     * @memberof CoworkingFloorRoomResponse
     */
    roomId: string;
    /**
     * 
     * @type {number}
     * @memberof CoworkingFloorRoomResponse
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof CoworkingFloorRoomResponse
     */
    longitude: number;
    /**
     * 
     * @type {number}
     * @memberof CoworkingFloorRoomResponse
     */
    price: number;
    /**
     * 
     * @type {Array<CoworkingAccountBookingResponse>}
     * @memberof CoworkingFloorRoomResponse
     */
    bookings: Array<CoworkingAccountBookingResponse>;
}

/**
 * Check if a given object implements the CoworkingFloorRoomResponse interface.
 */
export function instanceOfCoworkingFloorRoomResponse(value: object): value is CoworkingFloorRoomResponse {
    if (!('roomId' in value) || value['roomId'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('bookings' in value) || value['bookings'] === undefined) return false;
    return true;
}

export function CoworkingFloorRoomResponseFromJSON(json: any): CoworkingFloorRoomResponse {
    return CoworkingFloorRoomResponseFromJSONTyped(json, false);
}

export function CoworkingFloorRoomResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoworkingFloorRoomResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'roomId': json['room_id'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'price': json['price'],
        'bookings': ((json['bookings'] as Array<any>).map(CoworkingAccountBookingResponseFromJSON)),
    };
}

export function CoworkingFloorRoomResponseToJSON(json: any): CoworkingFloorRoomResponse {
    return CoworkingFloorRoomResponseToJSONTyped(json, false);
}

export function CoworkingFloorRoomResponseToJSONTyped(value?: CoworkingFloorRoomResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'room_id': value['roomId'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'price': value['price'],
        'bookings': ((value['bookings'] as Array<any>).map(CoworkingAccountBookingResponseToJSON)),
    };
}

