/* tslint:disable */
/* eslint-disable */
/**
 * CRM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoworkingFloorResponse } from './CoworkingFloorResponse';
import {
    CoworkingFloorResponseFromJSON,
    CoworkingFloorResponseFromJSONTyped,
    CoworkingFloorResponseToJSON,
    CoworkingFloorResponseToJSONTyped,
} from './CoworkingFloorResponse';

/**
 * 
 * @export
 * @interface CoworkingResponse
 */
export interface CoworkingResponse {
    /**
     * 
     * @type {string}
     * @memberof CoworkingResponse
     */
    location: string;
    /**
     * 
     * @type {string}
     * @memberof CoworkingResponse
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof CoworkingResponse
     */
    time: string;
    /**
     * 
     * @type {string}
     * @memberof CoworkingResponse
     */
    description: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CoworkingResponse
     */
    imageUrls: Array<string>;
    /**
     * 
     * @type {Array<CoworkingFloorResponse>}
     * @memberof CoworkingResponse
     */
    floors: Array<CoworkingFloorResponse>;
    /**
     * 
     * @type {number}
     * @memberof CoworkingResponse
     */
    freePlaces: number;
}

/**
 * Check if a given object implements the CoworkingResponse interface.
 */
export function instanceOfCoworkingResponse(value: object): value is CoworkingResponse {
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('imageUrls' in value) || value['imageUrls'] === undefined) return false;
    if (!('floors' in value) || value['floors'] === undefined) return false;
    if (!('freePlaces' in value) || value['freePlaces'] === undefined) return false;
    return true;
}

export function CoworkingResponseFromJSON(json: any): CoworkingResponse {
    return CoworkingResponseFromJSONTyped(json, false);
}

export function CoworkingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoworkingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'location': json['location'],
        'title': json['title'],
        'time': json['time'],
        'description': json['description'],
        'imageUrls': json['image_urls'],
        'floors': ((json['floors'] as Array<any>).map(CoworkingFloorResponseFromJSON)),
        'freePlaces': json['free_places'],
    };
}

export function CoworkingResponseToJSON(json: any): CoworkingResponse {
    return CoworkingResponseToJSONTyped(json, false);
}

export function CoworkingResponseToJSONTyped(value?: CoworkingResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'location': value['location'],
        'title': value['title'],
        'time': value['time'],
        'description': value['description'],
        'image_urls': value['imageUrls'],
        'floors': ((value['floors'] as Array<any>).map(CoworkingFloorResponseToJSON)),
        'free_places': value['freePlaces'],
    };
}

