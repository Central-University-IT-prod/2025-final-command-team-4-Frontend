/* tslint:disable */
/* eslint-disable */
/**
 * CRM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoworkingResponse } from './CoworkingResponse';
import {
    CoworkingResponseFromJSON,
    CoworkingResponseFromJSONTyped,
    CoworkingResponseToJSON,
    CoworkingResponseToJSONTyped,
} from './CoworkingResponse';

/**
 * 
 * @export
 * @interface CoworkingAnnouncementResponse
 */
export interface CoworkingAnnouncementResponse {
    /**
     * 
     * @type {string}
     * @memberof CoworkingAnnouncementResponse
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof CoworkingAnnouncementResponse
     */
    content?: string;
    /**
     * 
     * @type {Date}
     * @memberof CoworkingAnnouncementResponse
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CoworkingAnnouncementResponse
     */
    endTime?: Date;
    /**
     * 
     * @type {CoworkingResponse}
     * @memberof CoworkingAnnouncementResponse
     */
    coworking?: CoworkingResponse;
}

/**
 * Check if a given object implements the CoworkingAnnouncementResponse interface.
 */
export function instanceOfCoworkingAnnouncementResponse(value: object): value is CoworkingAnnouncementResponse {
    return true;
}

export function CoworkingAnnouncementResponseFromJSON(json: any): CoworkingAnnouncementResponse {
    return CoworkingAnnouncementResponseFromJSONTyped(json, false);
}

export function CoworkingAnnouncementResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoworkingAnnouncementResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'content': json['content'] == null ? undefined : json['content'],
        'startTime': json['start_time'] == null ? undefined : (new Date(json['start_time'])),
        'endTime': json['end_time'] == null ? undefined : (new Date(json['end_time'])),
        'coworking': json['coworking'] == null ? undefined : CoworkingResponseFromJSON(json['coworking']),
    };
}

export function CoworkingAnnouncementResponseToJSON(json: any): CoworkingAnnouncementResponse {
    return CoworkingAnnouncementResponseToJSONTyped(json, false);
}

export function CoworkingAnnouncementResponseToJSONTyped(value?: CoworkingAnnouncementResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'content': value['content'],
        'start_time': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'end_time': value['endTime'] == null ? undefined : ((value['endTime']).toISOString()),
        'coworking': CoworkingResponseToJSON(value['coworking']),
    };
}

